{
  "name": "tail",
  "shortDescription": "output the last part of files",
  "longDescription": "Print  the last 10 lines of each FILE to standard output.  With more than one FILE, precede each with a header giving the file name.",
  "syntaxes": [
    "tail [OPTION]... [FILE]..."
  ],
  "options": [
    {
      "name": "F",
      "argumentType": "NO_ARGUMENT",
      "description": "This option is the same as ‘--follow\u003dname --retry’.  That is, tail will attempt to reopen a file when it is removed.  Should this fail, tail will keep trying until it becomes accessible again.",
      "isLong": false
    },
    {
      "name": "bytes",
      "argumentType": "ARGUMENT_REQUIRED",
      "equivalent": "c",
      "description": "Output the last NUM bytes, instead of final lines.  However, if NUM is prefixed with a ‘+’, start printing with byte NUM from the start of each file, instead of from the end.  NUM may be, or may be an integer optionally followed by, one of the following multiplicative suffixes: ‘b’  \u003d\u003e            512 (\"blocks\") ‘KB’ \u003d\u003e           1000 (KiloBytes) ‘K’  \u003d\u003e           1024 (KibiBytes) ‘MB’ \u003d\u003e      1000*1000 (MegaBytes) ‘M’  \u003d\u003e      1024*1024 (MebiBytes) ‘GB’ \u003d\u003e 1000*1000*1000 (GigaBytes) ‘G’  \u003d\u003e 1024*1024*1024 (GibiBytes) and so on for ‘T’, ‘P’, ‘E’, ‘Z’, and ‘Y’.",
      "isLong": true
    },
    {
      "name": "follow",
      "argumentType": "OPTIONAL_ARGUMENT",
      "equivalent": "f",
      "description": "Loop forever trying to read more characters at the end of the file, presumably because the file is growing.  If more than one file is given, ‘tail’ prints a header whenever it gets output from a different file, to indicate which file that output is from.",
      "isLong": true
    },
    {
      "name": "lines",
      "argumentType": "ARGUMENT_REQUIRED",
      "equivalent": "n",
      "description": "Output the last NUM lines.  However, if NUM is prefixed with a ‘+’, start printing with line NUM from the start of each file, instead of from the end.  Size multiplier suffixes are the same as with the ‘-c’ option.",
      "isLong": true
    },
    {
      "name": "max-unchanged-stats",
      "argumentType": "ARGUMENT_REQUIRED",
      "description": "When tailing a file by name, if there have been N (default n\u003d5) consecutive iterations for which the file has not changed, then ‘open’/‘fstat’ the file to determine if that file name is still associated with the same device/inode-number pair as before.  When following a log file that is rotated, this is approximately the number of seconds between when tail prints the last pre-rotation lines and when it prints the lines that have accumulated in the new log file.  This option is meaningful only when polling (i.e., without inotify) and when following by name.",
      "isLong": true
    },
    {
      "name": "pid",
      "argumentType": "ARGUMENT_REQUIRED",
      "description": "When following by name or by descriptor, you may specify the process ID, PID, of the sole writer of all FILE arguments.  Then, shortly after that process terminates, tail will also terminate. This will work properly only if the writer and the tailing process are running on the same machine.  For example, to save the output of a build in a file and to watch the file grow, if you invoke ‘make’ and ‘tail’ like this then the tail process will stop when your build completes.  Without this option, you would have had to kill the ‘tail -f’ process yourself.",
      "isLong": true
    },
    {
      "name": "quiet",
      "argumentType": "NO_ARGUMENT",
      "equivalent": "q",
      "description": "Never print file name headers.",
      "isLong": true
    },
    {
      "name": "retry",
      "argumentType": "NO_ARGUMENT",
      "description": "Indefinitely try to open the specified file.  This option is useful mainly when following (and otherwise issues a warning).",
      "isLong": true
    },
    {
      "name": "silent",
      "argumentType": "NO_ARGUMENT",
      "equivalent": "q",
      "description": "Never print file name headers.",
      "isLong": true
    },
    {
      "name": "sleep-interval",
      "argumentType": "ARGUMENT_REQUIRED",
      "equivalent": "s",
      "description": "Change the number of seconds to wait between iterations (the default is 1.0).  During one iteration, every specified file is checked to see if it has changed size.  Historical implementations of ‘tail’ have required that NUMBER be an integer.  However, GNU ‘tail’ accepts an arbitrary floating point number.    When ‘tail’ uses inotify, this polling-related option is usually ignored.  However, if you also specify ‘--pid\u003dP’, ‘tail’ checks whether process P is alive at least every NUMBER seconds.",
      "isLong": true
    },
    {
      "name": "verbose",
      "argumentType": "NO_ARGUMENT",
      "equivalent": "v",
      "description": "Always print file name headers.",
      "isLong": true
    },
    {
      "name": "zero-terminated",
      "argumentType": "NO_ARGUMENT",
      "equivalent": "z",
      "description": "Delimit items with a zero byte rather than a newline (ASCII LF). I.e., treat input as items separated by ASCII NUL and terminate output items with ASCII NUL. This option can be useful in conjunction with ‘perl -0’ or ‘find -print0’ and ‘xargs -0’ which do the same in order to reliably handle arbitrary file names (even those containing blanks or other special characters).",
      "isLong": true
    },
    {
      "name": "help",
      "argumentType": "NO_ARGUMENT",
      "isLong": true
    },
    {
      "name": "version",
      "argumentType": "NO_ARGUMENT",
      "isLong": true
    }
  ]
}
